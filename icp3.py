# -*- coding: utf-8 -*-
"""icp3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gHPS_gM2yOtvIgvyeTDTE79b-d2mjO25
"""

#load library
import numpy as np
from numpy import linalg as LA

#Using NumPy create random vector of size 15 having only Integers in the range 1-10
def qA():
    #random vector
    v = np.random.randint(1,20,15)
    #reshape to 3:5
    v = v.reshape(3,5)
    #print the new shape
    print(v.shape)
    print(v)

    #replace max value in each row with 0
    for i in range(0,3):
      a = v[i:i+1, : ]          #split each row
      max_index = a.argmax()    #find max index
      a[0,max_index] = 0

    print(v)


    #Create a 2-dimensional array of size 4 x 3 (composed of 4 byte integer elements)
    arr = np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]], np.int32)


    #print shape, type, and data type of array
    print(arr)
    print(arr.shape)
    print(type(arr))
    print(arr.dtype)
    print()


qA()

def qB():
  #compute the eigenvalues and right eigenvectors of a given square array
  arr = np.array([[3, -2],[1, 0]])
  print(LA.eig(arr))
  print()


qB()

def qC():
  #Compute sum of diagonal elements of a given array
  arr = np.array([[0,1,2],[3,4,5]])
  diag = np.diagonal(arr)
  print(diag)
  print(sum(diag))
  print()

qC()


def qD():
  #create a new shape to an array without changing its data
  #reshape 3x2 arry to a 2x3 array
  array1 = np.array([[1,2],[3,4],[5,6]])

  array2 = array1.reshape(2,3)
  print(array2)
  print()

qD()

import numpy as np

#read csv file into numpy array
file = open("data.csv")


arr = np.genfromtxt("data.csv", dtype=float, delimiter=",", names=True)
arr = np.asarray(arr)
#perform basic statistical description
import pandas as pd
#pd.DataFrame(arr).describe()

print(arr)

#print(arr.shape())
#test for null values and replace with mean
#for i in range(0,3):
 # col = np.split(arr, i, axis=1)
 # for entry in col:
  #  if np.isnan(entry):
  #    entry = col.mean()
   #   print(col)

#print(arr)